plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'releaseinfo'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "com.example.myapplication"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 2
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // 下面两个实现的效果是一样的
    sourceSets {
        main {
            res.srcDirs = ['src/main/res', 'src/main/res-ad']
        }
    }
    /*  sourceSets(new Action<NamedDomainObjectContainer<AndroidSourceSet>>() {
          @Override
          void execute(NamedDomainObjectContainer<AndroidSourceSet> androidSourceSets) {
              androidSourceSets.getByName("main").res.srcDirs = ['src/main/res', 'src/main/res-ad']
              androidSourceSets.getCollectionSchema().elements.forEach {
                  println("       ====         " + it.getName())

              }
          }
      })*/

}


dependencies {
    implementation(files("..\\gradle-4.2.2-sources.jar"))

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

releaseInfoYu { re ->
    project.getExtensions().android.applicationVariants.all { variant ->
        re.versionCode = variant.getVersionCode()
        re.versionName = variant.getVersionName()
    }
    versionInfo = "第一次提交的版本数据"
    fileName = "release.xml"
}

